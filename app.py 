import csv
from pathlib import Path
from datetime import date

DATA_DIR = Path(__file__).parent / "data"
CSV_FILE = DATA_DIR / "transactions.csv"
FIELDS = ["date", "amount", "category", "note"]

def ensure_store():
    DATA_DIR.mkdir(exist_ok=True)
    if not CSV_FILE.exists():
        with CSV_FILE.open("w", newline="") as f:
            csv.DictWriter(f, fieldnames=FIELDS).writeheader()

def add_txn(amount, category, note="", when=None):
    ensure_store()
    when = when or date.today().isoformat()
    with CSV_FILE.open("a", newline="") as f:
        csv.DictWriter(f, fieldnames=FIELDS).writerow(
            {"date": when, "amount": amount, "category": category, "note": note}
        )
    print("Saved.")

def read_txns():
    ensure_store()
    with CSV_FILE.open() as f:
        return list(csv.DictReader(f))

def summary_by_category():
    totals = {}
    for r in read_txns():
        cat = r["category"].strip().lower()
        amt = float(r["amount"])
        totals[cat] = totals.get(cat, 0.0) + amt
    return totals

def main():
    ensure_store()
    while True:
        print("\n1) Add transaction  2) List  3) Category summary  4) Quit")
        choice = input("> ").strip()
        if choice == "1":
            amt = float(input("Amount (use negative for expense): "))
            cat = input("Category: ").strip()
            note = input("Note (optional): ").strip()
            add_txn(amt, cat, note)
        elif choice == "2":
            for r in read_txns():
                print(f"{r['date']}  {r['amount']:>8}  {r['category']:12}  {r['note']}")
        elif choice == "3":
            sums = summary_by_category()
            for cat, total in sorted(sums.items()):
                print(f"{cat:12} {total:>10.2f}")
        elif choice == "4":
            break
        else:
            print("Pick 1, 2, 3, or 4.")

if __name__ == "__main__":
    main()
